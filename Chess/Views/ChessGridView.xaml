<Page x:Class="Chess.Views.ChessGridView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:Chess.Views"
      xmlns:controls="clr-namespace:Chess.Controls"
      xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="ChessGridView">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding InitCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid>
        <ItemsControl Margin="10"
              ItemsSource="{Binding ChessGrid}" Name="chessGrid">
            <!--The ItemsControl has no default visual appearance.
      Use the Template property to specify a ControlTemplate to define
      the appearance of an ItemsControl. The ItemsPresenter uses the specified
      ItemsPanelTemplate (see below) to layout the items. If an
      ItemsPanelTemplate is not specified, the default is used. (For ItemsControl,
      the default is an ItemsPanelTemplate that specifies a StackPanel.-->
            <ItemsControl.Template>
                <ControlTemplate TargetType="ItemsControl">

                    <ItemsPresenter/>

                </ControlTemplate>
            </ItemsControl.Template>
            <!--Use the ItemsPanel property to specify an ItemsPanelTemplate
      that defines the panel that is used to hold the generated items.
      In other words, use this property if you want to affect
      how the items are laid out.-->
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <UniformGrid Rows="8" Columns="8" Width="600" Height="600"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <!--Use the ItemTemplate to set a DataTemplate to define
      the visualization of the data objects. This DataTemplate
      specifies that each data object appears with the Proriity
      and TaskName on top of a silver ellipse.-->
            <ItemsControl.ItemTemplate>
                <DataTemplate>

                    <Grid>
                        <Rectangle>
                            <Rectangle.Style>
                                <Style TargetType="Rectangle">
                                    <Setter Property="Fill" Value="#b58863"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Color}" Value="white">
                                            <Setter Property="Fill" Value="#f0d9b5"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Rectangle.Style>
                        </Rectangle>
                        <controls:ChessFigureView Figure="{Binding Figure}" DragInitCommand="{Binding DataContext.DragInitCommand, ElementName=chessGrid}" DragOverCommand="{Binding DataContext.DragOverCommand, ElementName=chessGrid}"></controls:ChessFigureView>
                    </Grid>
                </DataTemplate>
            </ItemsControl.ItemTemplate>


        </ItemsControl>
    </Grid>
</Page>
